import { BadgeMetadataTimeline, Balance, CollectionApproval, CollectionMetadataTimeline, CollectionPermissions, ContractAddressTimeline, CustomDataTimeline, IsArchivedTimeline, ManagerTimeline, NumberType, OffChainBalancesMetadataTimeline, StandardsTimeline, Stringify, UserIncomingApproval, UserOutgoingApproval, UserPermissions, convertBadgeMetadataTimeline, convertBalance, convertCollectionApproval, convertCollectionMetadataTimeline, convertCollectionPermissions, convertContractAddressTimeline, convertCustomDataTimeline, convertIsArchivedTimeline, convertManagerTimeline, convertOffChainBalancesMetadataTimeline, convertStandardsTimeline, convertUserIncomingApproval, convertUserOutgoingApproval, convertUserPermissions } from "../../../../"
import { ACTION_PERMISSION_TYPES, APPROVAL_AMOUNTS_TYPES, APPROVAL_DETAILS_TYPES, BADGE_METADATA_TIMELINE_TYPES, BADGE_METADATA_TYPES, BALANCES_ACTION_PERMISSION_TYPES, BALANCE_TYPES, COLLECTIONS_PERMISSIONS_TYPES, COLLECTION_APPROVED_TRANSFER_PERMISSION_TYPES, COLLECTION_APPROVED_TRANSFER_TYPES, COLLECTION_METADATA_TIMELINE_TYPES, COLLECTION_METADATA_TYPES, CONTRACT_ADDRESS_TIMELINE_TYPES, CUSTOM_DATA_TIMELINE_TYPES, INCOMING_APPROVAL_DETAILS_TYPES, INCREMENTED_BALANCES_TYPES, IS_ARCHIVED_TIMELINE_TYPES, MANAGER_TIMELINE_TYPES, MANUAL_BALANCES_TYPES, MAX_NUM_TRANSFERS_TYPES, MERKLE_CHALLENGE_TYPES, MUST_OWN_BADGES_TYPES, OFF_CHAIN_BALANCES_METADATA_TIMELINE_TYPES, OFF_CHAIN_BALANCES_METADATA_TYPES, OUTGOING_APPROVAL_DETAILS_TYPES, PREDETERMINED_BALANCES_TYPES, PREDETERMINED_ORDER_CALCULATION_METHOD_TYPES, STANDARDS_TIMELINE_TYPES, TIMED_UPDATE_PERMISSION_TYPES, TIMED_UPDATE_WITH_BADGE_IDS_PERMISSION_TYPES, UINT_RANGE_TYPES, USER_APPROVED_INCOMING_TRANSFER_PERMISSION_TYPES, USER_APPROVED_INCOMING_TRANSFER_TYPES, USER_APPROVED_OUTGOING_TRANSFER_PERMISSION_TYPES, USER_APPROVED_OUTGOING_TRANSFER_TYPES, USER_PERMISSIONS_TYPES } from "./eip712HelperTypes"

const MsgUpdateCollectionValueType = [
  { name: 'creator', type: 'string' },
  { name: 'collectionId', type: 'string' },
  { name: 'balancesType', type: 'string' },
  { name: 'defaultOutgoingApprovals', type: 'UserOutgoingApproval[]' },
  { name: 'defaultIncomingApprovals', type: 'UserIncomingApproval[]' },
  { name: "defaultAutoApproveSelfInitiatedOutgoingTransfers", type: "bool" },
  { name: "defaultAutoApproveSelfInitiatedIncomingTransfers", type: "bool" },
  { name: 'defaultUserPermissions', type: 'UserPermissions' },
  { name: 'badgesToCreate', type: 'Balance[]' },
  { name: 'updateCollectionPermissions', type: 'bool' },
  { name: 'collectionPermissions', type: 'CollectionPermissions' },
  { name: 'updateManagerTimeline', type: 'bool' },
  { name: 'managerTimeline', type: 'ManagerTimeline[]' },
  { name: 'updateCollectionMetadataTimeline', type: 'bool' },
  { name: 'collectionMetadataTimeline', type: 'CollectionMetadataTimeline[]' },
  { name: 'updateBadgeMetadataTimeline', type: 'bool' },
  { name: 'badgeMetadataTimeline', type: 'BadgeMetadataTimeline[]' },
  { name: 'updateOffChainBalancesMetadataTimeline', type: 'bool' },
  { name: 'offChainBalancesMetadataTimeline', type: 'OffChainBalancesMetadataTimeline[]' },
  { name: 'updateCustomDataTimeline', type: 'bool' },
  { name: 'customDataTimeline', type: 'CustomDataTimeline[]' },
  { name: 'updateCollectionApprovals', type: 'bool' },
  { name: 'collectionApprovals', type: 'CollectionApproval[]' },
  { name: 'updateStandardsTimeline', type: 'bool' },
  { name: 'standardsTimeline', type: 'StandardsTimeline[]' },
  { name: 'updateContractAddressTimeline', type: 'bool' },
  { name: 'contractAddressTimeline', type: 'ContractAddressTimeline[]' },
  { name: 'updateIsArchivedTimeline', type: 'bool' },
  { name: 'isArchivedTimeline', type: 'IsArchivedTimeline[]' },
]

export const MSG_UPDATE_COLLECTION_TYPES = {
  MsgValue: MsgUpdateCollectionValueType,
  "CollectionPermissions": COLLECTIONS_PERMISSIONS_TYPES,
  "ManagerTimeline": MANAGER_TIMELINE_TYPES,
  "CollectionMetadataTimeline": COLLECTION_METADATA_TIMELINE_TYPES,
  "BadgeMetadataTimeline": BADGE_METADATA_TIMELINE_TYPES,
  "OffChainBalancesMetadataTimeline": OFF_CHAIN_BALANCES_METADATA_TIMELINE_TYPES,
  "CustomDataTimeline": CUSTOM_DATA_TIMELINE_TYPES,
  "StandardsTimeline": STANDARDS_TIMELINE_TYPES,
  "ContractAddressTimeline": CONTRACT_ADDRESS_TIMELINE_TYPES,
  "IsArchivedTimeline": IS_ARCHIVED_TIMELINE_TYPES,
  "CollectionApproval": COLLECTION_APPROVED_TRANSFER_TYPES,
  "UintRange": UINT_RANGE_TYPES,
  "Balance": BALANCE_TYPES,
  "BadgeMetadata": BADGE_METADATA_TYPES,
  "CollectionMetadata": COLLECTION_METADATA_TYPES,
  "OffChainBalancesMetadata": OFF_CHAIN_BALANCES_METADATA_TYPES,
  "ActionPermission": ACTION_PERMISSION_TYPES,
  "TimedUpdatePermission": TIMED_UPDATE_PERMISSION_TYPES,
  "BalancesActionPermission": BALANCES_ACTION_PERMISSION_TYPES,
  "TimedUpdateWithBadgeIdsPermission": TIMED_UPDATE_WITH_BADGE_IDS_PERMISSION_TYPES,
  "CollectionApprovalPermission": COLLECTION_APPROVED_TRANSFER_PERMISSION_TYPES,
  "ApprovalCriteria": APPROVAL_DETAILS_TYPES,
  "UserPermissions": USER_PERMISSIONS_TYPES,
  "UserOutgoingApproval": USER_APPROVED_OUTGOING_TRANSFER_TYPES,
  "UserIncomingApproval": USER_APPROVED_INCOMING_TRANSFER_TYPES,
  "UserOutgoingApprovalPermission": USER_APPROVED_OUTGOING_TRANSFER_PERMISSION_TYPES,
  "UserIncomingApprovalPermission": USER_APPROVED_INCOMING_TRANSFER_PERMISSION_TYPES,
  "OutgoingApprovalCriteria": OUTGOING_APPROVAL_DETAILS_TYPES,
  "IncomingApprovalCriteria": INCOMING_APPROVAL_DETAILS_TYPES,
  "MustOwnBadges": MUST_OWN_BADGES_TYPES,
  "MerkleChallenge": MERKLE_CHALLENGE_TYPES,
  "PredeterminedBalances": PREDETERMINED_BALANCES_TYPES,
  "ApprovalAmounts": APPROVAL_AMOUNTS_TYPES,
  "MaxNumTransfers": MAX_NUM_TRANSFERS_TYPES,
  "ManualBalances": MANUAL_BALANCES_TYPES,
  "IncrementedBalances": INCREMENTED_BALANCES_TYPES,
  "PredeterminedOrderCalculationMethod": PREDETERMINED_ORDER_CALCULATION_METHOD_TYPES
}


export function createEIP712MsgUpdateCollection<T extends NumberType>(
  creator: string,
  collectionId: T,
  balancesType: string,
  defaultOutgoingApprovals: UserOutgoingApproval<T>[],
  defaultIncomingApprovals: UserIncomingApproval<T>[],
  defaultAutoApproveSelfInitiatedOutgoingTransfers: boolean,
  defaultAutoApproveSelfInitiatedIncomingTransfers: boolean,
  defaultUserPermissions: UserPermissions<T>,
  badgesToCreate: Balance<T>[],
  updateCollectionPermissions: boolean,
  collectionPermissions: CollectionPermissions<T>,
  updateManagerTimeline: boolean,
  managerTimeline: ManagerTimeline<T>[],
  updateCollectionMetadataTimeline: boolean,
  collectionMetadataTimeline: CollectionMetadataTimeline<T>[],
  updateBadgeMetadataTimeline: boolean,
  badgeMetadataTimeline: BadgeMetadataTimeline<T>[],
  updateOffChainBalancesMetadataTimeline: boolean,
  offChainBalancesMetadataTimeline: OffChainBalancesMetadataTimeline<T>[],
  updateCustomDataTimeline: boolean,
  customDataTimeline: CustomDataTimeline<T>[],
  // inheritedCollectionId: T,
  updateCollectionApprovals: boolean,
  collectionApprovals: CollectionApproval<T>[],
  updateStandardsTimeline: boolean,
  standardsTimeline: StandardsTimeline<T>[],
  updateContractAddressTimeline: boolean,
  contractAddressTimeline: ContractAddressTimeline<T>[],
  updateIsArchivedTimeline: boolean,
  isArchivedTimeline: IsArchivedTimeline<T>[],
) {
  return {
    type: 'badges/UpdateCollection',
    value: {
      creator,
      collectionId: collectionId.toString(),
      balancesType,
      defaultOutgoingApprovals: defaultOutgoingApprovals.map((x) => convertUserOutgoingApproval(x, Stringify, true)),
      defaultIncomingApprovals: defaultIncomingApprovals.map((x) => convertUserIncomingApproval(x, Stringify, true)),
      defaultAutoApproveSelfInitiatedOutgoingTransfers,
      defaultAutoApproveSelfInitiatedIncomingTransfers,
      defaultUserPermissions: convertUserPermissions(defaultUserPermissions, Stringify, true),
      badgesToCreate: badgesToCreate.map((x) => convertBalance(x, Stringify)),
      updateCollectionPermissions,
      collectionPermissions: convertCollectionPermissions(collectionPermissions, Stringify, true),
      updateManagerTimeline,
      managerTimeline: managerTimeline.map((x) => convertManagerTimeline(x, Stringify)),
      updateCollectionMetadataTimeline,
      collectionMetadataTimeline: collectionMetadataTimeline.map((x) => convertCollectionMetadataTimeline(x, Stringify)),
      updateBadgeMetadataTimeline,
      badgeMetadataTimeline: badgeMetadataTimeline.map((x) => convertBadgeMetadataTimeline(x, Stringify)),
      updateOffChainBalancesMetadataTimeline,
      offChainBalancesMetadataTimeline: offChainBalancesMetadataTimeline.map((x) => convertOffChainBalancesMetadataTimeline(x, Stringify)),
      updateCustomDataTimeline,
      customDataTimeline: customDataTimeline.map((x) => convertCustomDataTimeline(x, Stringify)),
      // inheritedCollectionId: inheritedCollectionId.toString(),
      updateCollectionApprovals,
      collectionApprovals: collectionApprovals.map((x) => convertCollectionApproval(x, Stringify, true)),
      updateStandardsTimeline,
      standardsTimeline: standardsTimeline.map((x) => convertStandardsTimeline(x, Stringify)),
      updateContractAddressTimeline,
      contractAddressTimeline: contractAddressTimeline.map((x) => convertContractAddressTimeline(x, Stringify)),
      updateIsArchivedTimeline,
      isArchivedTimeline: isArchivedTimeline.map((x) => convertIsArchivedTimeline(x, Stringify)),
    },
  }
}
