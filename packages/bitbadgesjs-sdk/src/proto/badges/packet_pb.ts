// @generated by protoc-gen-es v1.7.2 with parameter "target=ts"
// @generated from file badges/packet.proto (package badges, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message badges.BadgesPacketData
 */
export class BadgesPacketData extends Message<BadgesPacketData> {
  /**
   * @generated from oneof tokens.BadgesPacketData.packet
   */
  packet: {
    /**
     * @generated from field: badges.NoData noData = 1;
     */
    value: NoData;
    case: "noData";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<BadgesPacketData>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "badges.BadgesPacketData";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "noData", kind: "message", T: NoData, oneof: "packet" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BadgesPacketData {
    return new BadgesPacketData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BadgesPacketData {
    return new BadgesPacketData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BadgesPacketData {
    return new BadgesPacketData().fromJsonString(jsonString, options);
  }

  static equals(a: BadgesPacketData | PlainMessage<BadgesPacketData> | undefined, b: BadgesPacketData | PlainMessage<BadgesPacketData> | undefined): boolean {
    return proto3.util.equals(BadgesPacketData, a, b);
  }
}

/**
 * @generated from message badges.NoData
 */
export class NoData extends Message<NoData> {
  constructor(data?: PartialMessage<NoData>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "badges.NoData";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NoData {
    return new NoData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NoData {
    return new NoData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NoData {
    return new NoData().fromJsonString(jsonString, options);
  }

  static equals(a: NoData | PlainMessage<NoData> | undefined, b: NoData | PlainMessage<NoData> | undefined): boolean {
    return proto3.util.equals(NoData, a, b);
  }
}

