// @generated by protoc-gen-es v1.7.2 with parameter "target=ts"
// @generated from file gamm/v1beta1/gov.proto (package gamm.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * @generated from message gamm.v1beta1.PoolRecordWithCFMMLink
 */
export class PoolRecordWithCFMMLink extends Message<PoolRecordWithCFMMLink> {
  /**
   * @generated from field: string denom0 = 1;
   */
  denom0 = "";

  /**
   * @generated from field: string denom1 = 2;
   */
  denom1 = "";

  /**
   * @generated from field: uint64 tick_spacing = 3;
   */
  tickSpacing = protoInt64.zero;

  /**
   * @generated from field: string exponent_at_price_one = 4;
   */
  exponentAtPriceOne = "";

  /**
   * @generated from field: string spread_factor = 5;
   */
  spreadFactor = "";

  /**
   * @generated from field: uint64 balancer_pool_id = 6;
   */
  balancerPoolId = protoInt64.zero;

  constructor(data?: PartialMessage<PoolRecordWithCFMMLink>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gamm.v1beta1.PoolRecordWithCFMMLink";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "denom0", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "denom1", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "tick_spacing", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "exponent_at_price_one", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "spread_factor", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "balancer_pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PoolRecordWithCFMMLink {
    return new PoolRecordWithCFMMLink().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PoolRecordWithCFMMLink {
    return new PoolRecordWithCFMMLink().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PoolRecordWithCFMMLink {
    return new PoolRecordWithCFMMLink().fromJsonString(jsonString, options);
  }

  static equals(a: PoolRecordWithCFMMLink | PlainMessage<PoolRecordWithCFMMLink> | undefined, b: PoolRecordWithCFMMLink | PlainMessage<PoolRecordWithCFMMLink> | undefined): boolean {
    return proto3.util.equals(PoolRecordWithCFMMLink, a, b);
  }
}

